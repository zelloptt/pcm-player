function PCMPlayer(t,e){this.options=Object.assign({},{encoding:"16bitInt",channels:1,sampleRate:8e3,flushingTime:1e3,gain:1},t),void 0===this.options.gain||this.isValidGain(this.options.gain)||(this.options.gain=1),this.samples=new Float32Array([]),this.flush=this.flush.bind(this),this.startTimestampMs=Date.now(),this.flushTimeSyncMs=this.options.flushingTime,this.flushTimer=setTimeout(this.flush,this.flushTimeSyncMs),this.maxValue=this.getMaxValue(),this.typedArray=this.getTypedArray(),this.onendedCallback=e,this.feedCounter=0}PCMPlayer.prototype.init=function(){return this.createContext()},PCMPlayer.prototype.webAudioTouchUnlock=function(s){return new Promise(function(t,e){var i;"suspended"===s.state&&"ontouchstart"in window?(i=function(){s.resume().then(function(){document.body.removeEventListener("touchstart",i),document.body.removeEventListener("touchend",i),t(!0)},function(t){e(t)})},document.body.addEventListener("touchstart",i,!1),document.body.addEventListener("touchend",i,!1)):t(!1)})},PCMPlayer.prototype.isValidGain=function(t){return isFinite(t)&&t<=2&&0<=t},PCMPlayer.prototype.getMaxValue=function(){var t={"8bitInt":128,"16bitInt":32768,"32bitInt":2147483648,"32bitFloat":1};return t[this.options.encoding]||t["16bitInt"]},PCMPlayer.prototype.getTypedArray=function(){var t={"8bitInt":Int8Array,"16bitInt":Int16Array,"32bitInt":Int32Array,"32bitFloat":Float32Array};return t[this.options.encoding]||t["16bitInt"]},PCMPlayer.prototype.createContext=function(){return this.audioCtx=new(window.AudioContext||window.webkitAudioContext),this.webAudioTouchUnlock(this.audioCtx).then(function(){this.audioCtx&&(this.gainNode=this.audioCtx.createGain(),this.gainNode.gain.value=this.options.gain,this.options.useAudioElement?this.createAudioElement():this.gainNode.connect(this.audioCtx.destination),this.startTime=this.audioCtx.currentTime)}.bind(this))},PCMPlayer.prototype.createAudioElement=function(){var t=this.audioCtx.createMediaStreamDestination();this.gainNode.connect(t),this.audioEl=new Audio,this.audioEl.srcObject=t.stream,this.startTime=this.audioCtx.currentTime,this.options.outputDeviceId&&this.audioEl.setSinkId(this.options.outputDeviceId),this.audioEl.play()},PCMPlayer.prototype.isTypedArray=function(t){return t.byteLength&&t.buffer&&t.buffer.constructor===ArrayBuffer},PCMPlayer.prototype.feed=function(t){if(!this.muted&&this.isTypedArray(t)){t=this.getFormattedValue(t);const e=new Float32Array(this.samples.length+t.length);e.set(this.samples,0),e.set(t,this.samples.length),this.samples=e,this.feedCounter++}},PCMPlayer.prototype.getFormattedValue=function(t){var e=new this.typedArray(t.buffer);const i=new Float32Array(e.length);for(let t=0;t<e.length;t++)i[t]=e[t]/this.maxValue;return i},PCMPlayer.prototype.setGain=function(t){if(!this.isValidGain(t))return!1;this.options.gain=t,this.gainNode.gain.value=t},PCMPlayer.prototype.setSinkId=function(t){this.audioEl&&this.audioEl.setSinkId(t)},PCMPlayer.prototype.reset=function(){this.samples=new Float32Array([]),this.feedCounter=0,this.bufferSource&&(this.bufferSource.stop(),this.bufferSource.disconnect(),this.bufferSource=null)},PCMPlayer.prototype.destroy=function(){this.reset(),this.flushTimer&&(clearTimeout(this.flushTimer),this.flushTimer=null),this.flushTimeSyncMs=0,this.startTimestampMs=0,this.audioCtx.close(),this.audioCtx=null},PCMPlayer.prototype.flush=function(){this.flushTimeSyncMs+=this.options.flushingTime;var t=Date.now()-this.startTimestampMs;let e=this.flushTimeSyncMs-t;if((e<0||e>2*this.options.flushingTime)&&(e=this.options.flushingTime),this.flushTimer=setTimeout(this.flush,e),this.samples.length){let t=this.audioCtx.createBufferSource(),e=this.samples.length/this.options.channels,i=this.audioCtx.createBuffer(this.options.channels,e,this.options.sampleRate),s,n,o,a,r;for(n=0;n<this.options.channels;n++)for(s=i.getChannelData(n),o=n,r=50,a=0;a<e;a++)s[a]=this.samples[o],a<50&&(s[a]=s[a]*a/50),a>=e-51&&(s[a]=s[a]*r--/50),o+=this.options.channels;this.startTime<this.audioCtx.currentTime&&(this.startTime=this.audioCtx.currentTime),t.buffer=i,t.connect(this.gainNode),t.start(this.startTime),this.bufferSource=t;const h=this.feedCounter,u=this.onendedCallback;u&&(t.onended=()=>u(h)),this.startTime+=i.duration,this.samples=new Float32Array([]),this.feedCounter=0}},PCMPlayer.prototype.mute=function(t){this.muted=t},PCMPlayer.prototype.setSampleRate=function(t){this.options.sampleRate=t},module.exports=PCMPlayer;